// –∞–≤—Ç–æ–ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ !!!
// function createArrayOfNumbers(min, max) {
//   min = 1;
//   max = 5;
//   let tags = [];

//   for (let i = min; i <= max; i++) {
//     tags.push(i);
//   }

//   return tags;
// }
// console.log(createArrayOfNumbers());

// *****
// const planets = ["1", "2", "Venus"];
// let sum;
// for (const planet of planets) {
//   // console.log(planet);
//   sum += planet;
//   console.log(sum);
// }

// *****
// function calculateTotalPrice(order) {
//   const orders = [];
//   for (const order of orders) {

//   }
// }
// calculateTotalPrice();

// avto****
// const namber = [4, 2, 3];

// function calculateTotalPrice(order) {
//   // const order = [];
//   let total = 0;
//   for (let i = 0; i < order.length; i++) {
//     total = order[i];
//   }
//   return total;
// }
// console.log(calculateTotalPrice(namber));

// function getEvenNumbers(start, end) {
//   // start = 1;
//   // end = 10;
//   let tags = [];
//   for (let i = start; i <= end; i++) {
//     if (i % 2 === 0) {
//       tags.push(i);
//     }
//   }
//   return tags;
// }
// console.log(getEvenNumbers(1, 1));

// **************

// function checkStorage(storage, item) {
//   for (let i = 0; i < storage.length; i++) {
//     if (storage[i].toLowerCase() === item.toLowerCase()) {
//       return `${item} is available to order!`;
//     }
//   }
//   return "Sorry! We are out of stock!";
// }

// function checkStorage(storage, item) {
//   const isAvailable = storage.some(
//     (product) => product.toLowerCase() === item.toLowerCase()
//   );
//   return isAvailable
//     ? `${item} is available to order!`
//     : "Sorry! We are out of stock!";
// }

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

// for (let i = 0, i < fruits.length; i++){
//     console.log(${i+1} - ${fruits[i]});
// }

// ************
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é min(a, b), —è–∫–∞ –ø—Ä–∏–π–º–∞—î 2 —á–∏—Å–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –º–µ–Ω—å—à–µ –∑ –Ω–∏—Ö.
// –ü–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º—É—î —Å–∞–º–µ —á–∏—Å–ª–∞, –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É
// –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∑ —Ñ—É–Ω–∫—Ü—ñ—ó —Ä—è–¥–æ–∫ - 'Not a number!'.

// ****  GPT  ****
// function min(a, b) {
//   if (typeof a !== "number" || typeof b !== "number") {
//     return "Not a number!";
//   }

//   return a < b ? a : b;
// }

// function min(a, b) {
//   let min;
//   if (Number(a < b)) {
//     return a;
//   } else {
//     return "Not a number!";
//   }
// }
// console.log(3, 6);

// ************  dz 2  **********

// ********    1     **********

// –°—Ç–∞–Ω—Ü—ñ—è –∑ –ø—Ä–æ–¥–∞–∂—É —Ä–µ–º–æ–Ω—Ç–Ω–∏—Ö –¥—Ä–æ—ó–¥—ñ–≤ –≥–æ—Ç–æ–≤–∞ –¥–æ –∑–∞–ø—É—Å–∫—É, –∑–∞–ª–∏—à–∏–ª–æ—Å—è –Ω–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –¥–ª—è –≤—ñ–¥–¥—ñ–ª—É –ø—Ä–æ–¥–∞–∂—ñ–≤. –û–≥–æ–ª–æ—Å–∏ —Ñ—É–Ω–∫—Ü—ñ—é makeTransaction(quantity, pricePerDroid, customerCredits), —è–∫–∞ —Å–∫–ª–∞–¥–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∫—É–ø—ñ–≤–ª—é —Ä–µ–º–æ–Ω—Ç–Ω–∏—Ö –¥—Ä–æ—ó–¥—ñ–≤.

// –í–æ–Ω–∞ –æ–≥–æ–ª–æ—à—É—î —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –±—É–¥—É—Ç—å –∑–∞–¥–∞–≤–∞—Ç–∏—Å—è –ø—ñ–¥ —á–∞—Å —ó—ó –≤–∏–∫–ª–∏–∫—É:
// quantity ‚Äî –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–∏—Ö –¥—Ä–æ—ó–¥—ñ–≤
// pricePerDroid ‚Äî —Ü—ñ–Ω–∞ –æ–¥–Ω–æ–≥–æ –¥—Ä–æ—ó–¥–∞
// customerCredits ‚Äî —Å—É–º–∞ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É –∫–ª—ñ—î–Ω—Ç–∞

// –î–æ–ø–æ–≤–Ω–∏ —Ñ—É–Ω–∫—Ü—ñ—é —Ç–∞–∫–∏–º —á–∏–Ω–æ–º:
// –û–≥–æ–ª–æ—Å–∏ –∑–º—ñ–Ω–Ω—É –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–∑–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å —É—Å—ñ—Ö –∑–∞–º–æ–≤–ª–µ–Ω–∏—Ö –¥—Ä–æ—ó–¥—ñ–≤) —ñ –∑–∞–¥–∞–π —ó–π –≤–∏—Ä–∞–∑ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ—î—ó —Å—É–º–∏.
// –î–æ–¥–∞–π –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —á–∏ –∑–º–æ–∂–µ –∫–ª—ñ—î–Ω—Ç –æ–ø–ª–∞—Ç–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:
// —è–∫—â–æ —Å—É–º–∞ –¥–æ —Å–ø–ª–∞—Ç–∏ –ø–µ—Ä–µ–≤–∏—â—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫—Ä–µ–¥–∏—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É –∫–ª—ñ—î–Ω—Ç–∞, —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—è–¥–æ–∫ "Insufficient funds!"
// –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—è–¥–æ–∫ "You ordered <quantity> droids worth <totalPrice> credits!", –¥–µ <quantity> —Ü–µ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω–∏—Ö –¥—Ä–æ—ó–¥—ñ–≤, –∞ <totalPrice> —Ü–µ —ó—Ö –∑–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å.

// –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.

// function makeTransaction(quantity, pricePerDroid, customerCredits) {
//   const totalPrice = quantity * pricePerDroid;
//   if (totalPrice > customerCredits) {
//     return "Insufficient funds!";
//   } else {
//     return `"You ordered ${quantity} droids worth ${totalPrice} credits!"`;
//   }
// }

// console.log(makeTransaction(5, 3000, 23000)); // "You ordered 5 droids worth 15000 credits!"
// console.log(makeTransaction(3, 1000, 15000)); // "You ordered 3 droids worth 3000 credits!"
// console.log(makeTransaction(10, 5000, 8000)); // "Insufficient funds!"
// console.log(makeTransaction(8, 2000, 10000)); // "Insufficient funds!"
// console.log(makeTransaction(10, 500, 5000)); // "You ordered 10 droids worth 5000 credits!"

// ******   2 ???????????? *********√∑

// –û–≥–æ–ª–æ—Å–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatMessage(message, maxLength), —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ (–ø–∞—Ä–∞–º–µ—Ç—Ä message) —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä—è—î –π–æ–≥–æ –¥–æ–≤–∂–∏–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –∑–∞–¥–∞–Ω–æ—ó –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä maxLength).

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ:
// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ —Ä—è–¥–∫–∞ –¥–æ—Ä—ñ–≤–Ω—é—î –∞–±–æ –º–µ–Ω—à–∞ –∑–∞ maxLength, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Ä—è–¥–æ–∫ –±–µ–∑ –∑–º—ñ–Ω.
// –Ø–∫—â–æ –¥–æ–≤–∂–∏–Ω–∞ –ø–µ—Ä–µ–≤–∏—â—É—î maxLength, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –æ–±—Ä—ñ–∑–∞—î —Ä—è–¥–æ–∫ –¥–æ maxLength —Å–∏–º–≤–æ–ª—ñ–≤, –¥–æ–¥–∞—î —Ç—Ä–∏–∫—Ä–∞–ø–∫—É "..." –≤ –∫—ñ–Ω—Ü—ñ —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±—Ä—ñ–∑–∞–Ω—É –≤–µ—Ä—Å—ñ—é.

// –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.

// function formatMessage(message, maxLength) {
//   message = "";
//   if (message.length <= maxLength) {
//     return message;
//   } else {
//     message.push("...");
//   }
//   //   return message;
// }

// console.log(formatMessage("Curabitur ligula sapien", 16)); // "Curabitur ligula..."
// console.log(formatMessage("Curabitur ligula sapien", 23)); // "Curabitur ligula sapien"
// console.log(formatMessage("Vestibulum facilisis purus nec", 20)); // "Vestibulum facilisis..."
// console.log(formatMessage("Vestibulum facilisis purus nec", 30)); // "Vestibulum facilisis purus nec"
// console.log(formatMessage("Nunc sed turpis a felis in nunc fringilla", 15)); // "Nunc sed turpis..."
// console.log(formatMessage("Nunc sed turpis a felis in nunc fringilla", 41)); // "Nunc sed turpis a felis in nunc fringilla"

// ********* 3 *********
//     –§—É–Ω–∫—Ü—ñ—è checkForSpam(message) –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ (–ø–∞—Ä–∞–º–µ—Ç—Ä message), –ø–µ—Ä–µ–≤—ñ—Ä—è—î –π–æ–≥–æ –Ω–∞ –≤–º—ñ—Å—Ç –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–∏—Ö —Å–ª—ñ–≤ spam —ñ sale, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏. –°–ª–æ–≤–∞ –≤ —Ä—è–¥–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ message –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤ –¥–æ–≤—ñ–ª—å–Ω–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ SPAM –∞–±–æ sAlE.

// –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ:
// –Ø–∫—â–æ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ —Å–ª–æ–≤–æ (spam –∞–±–æ sale), —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –±—É–ª—å true
// –Ø–∫—â–æ –≤ —Ä—è–¥–∫—É –≤—ñ–¥—Å—É—Ç–Ω—ñ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω—ñ —Å–ª–æ–≤–∞, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –±—É–ª—å false

// –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.

// function checkForSpam(message) {
//   const loweMessage = message.toLowerCase();
//   return loweMessage.includes("spam") || loweMessage.includes("sale");
// }

// console.log(checkForSpam("Latest technology news")); // false
// console.log(checkForSpam("JavaScript weekly newsletter")); // false
// console.log(checkForSpam("Get best sale offers now!")); // true
// console.log(checkForSpam("Amazing SalE, only tonight!")); // true
// console.log(checkForSpam("Trust me, this is not a spam message")); // true
// console.log(checkForSpam("Get rid of sPaM emails. Our book in on sale!")); // true
// console.log(checkForSpam("[SPAM] How to earn fast money?")); // true

// ************  dz 3  **********

// **1**
// –ü–µ—Ä—à, –Ω—ñ–∂ —Ä–æ–∑–≤‚Äô—è–∑—É–≤–∞—Ç–∏ –∑–∞–¥–∞—á—É, –¥–∞–≤–∞–π –≤–∏–∑–Ω–∞—á–∏–º–æ—Å—è —ñ–∑ –Ω–æ–≤–∏–º —Ç–µ—Ä–º—ñ–Ω–æ–º!
// –¢–µ—Ä–º—ñ–Ω slug ‚Äî —Ü–µ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –ª—é–¥–∏–Ω—ñ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä, —è–∫–∏–π –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —É –≤–µ–± —Ä–æ–∑—Ä–æ–±—Ü—ñ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —á–∏—Ç–∞–±–µ–ª—å–Ω–∏—Ö URL-–∞–¥—Ä–µ—Å.
// –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞–º—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–±–∞—á–∏–≤ –≤ –∞–¥—Ä–µ—Å–Ω–æ–º—É —Ä—è–¥–∫—É mysite.com/posts/1q8fh74tx, –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ slug —ñ–∑ –Ω–∞–∑–≤–∏ —Å—Ç–∞—Ç—Ç—ñ. –£ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –∞–¥—Ä–µ—Å–∞ –±—É–¥–µ –ø—Ä–∏—î–º–Ω—ñ—à–æ—é –¥–ª—è —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è: mysite.com/posts/arrays-for-beginners.

// Slug ‚Äî —Ü–µ –∑–∞–≤–∂–¥–∏ —Ä—è–¥–æ–∫ —É –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ, —Å–ª–æ–≤–∞ —è–∫–æ–≥–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Ç–∏—Ä–µ.
// –ó —Ü–∏–º —Ä–æ–∑—ñ–±—Ä–∞–ª–∏—Å—è? –ê —Ç–µ–ø–µ—Ä –¥–∞–≤–∞–π –Ω–∞—Ä–µ—à—Ç—ñ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∑–∞–¥–∞—á—É!

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é slugify(title), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—Ç—ñ, –ø–∞—Ä–∞–º–µ—Ç—Ä title —ñ –ø–æ–≤–µ—Ä—Ç–∞—î slug, —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —ñ–∑ —Ü—å–æ–≥–æ —Ä—è–¥–∫–∞.
// –ó–Ω–∞—á–µ–Ω–Ω—è–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ title –±—É–¥—É—Ç—å —Ä—è–¥–∫–∏, —Å–ª–æ–≤–∞ —è–∫–∏—Ö —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ª–∏—à–µ –ø—Ä–æ–±—ñ–ª–∞–º–∏.
// –£—Å—ñ —Å–∏–º–≤–æ–ª–∏ slug –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –≤ –Ω–∏–∂–Ω—å–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ.
// –£—Å—ñ —Å–ª–æ–≤–∞ slug –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ —Ç–∏—Ä–µ.
// –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.
//

// function slugify(title) {
//   const slug = title.split(" ").join("-").toLowerCase();
//   return slug;
// }

// console.log(slugify("Arrays for beginners")); // "arrays-for-beginners"
// console.log(slugify("English for developer")); // "english-for-developer"
// console.log(slugify("Ten secrets of JavaScript")); // "ten-secrets-of-javascript"
// console.log(slugify("How to become a JUNIOR developer in TWO WEEKS")); // "how-to-become-a-junior-developer-in-two-weeks"

// ***  2  ***//
// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é –ø—ñ–¥ –Ω–∞–∑–≤–æ—é makeArray, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ç—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: firstArray (–º–∞—Å–∏–≤), secondArray (–º–∞—Å–∏–≤) —ñ maxLength (—á–∏—Å–ª–æ). –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —è–∫–∏–π –º—ñ—Å—Ç–∏—Ç—å —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ firstArray, –∞ –ø–æ—Ç—ñ–º —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑ secondArray.
// –Ø–∫—â–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —É –Ω–æ–≤–æ–º—É –º–∞—Å–∏–≤—ñ –ø–µ—Ä–µ–≤–∏—â—É—î maxLength, —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ–ø—ñ—é –º–∞—Å–∏–≤—É –∑ –¥–æ–≤–∂–∏–Ω–æ—é maxLength –µ–ª–µ–º–µ–Ω—Ç—ñ–≤.
// –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –≤–µ—Å—å –Ω–æ–≤–∏–π –º–∞—Å–∏–≤.

// –í—ñ–∑—å–º–∏ –∫–æ–¥ –Ω–∏–∂—á–µ —ñ –≤—Å—Ç–∞–≤ –ø—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Å–≤–æ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ—Ä–µ–∫—Ç–Ω–æ—Å—Ç—ñ —ó—ó —Ä–æ–±–æ—Ç–∏. –£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—ó —Ä–æ–±–æ—Ç–∏.

// function makeArray(firstArray, secondArray, maxLength) {
//   const arr = [];
//   const arr2 = firstArray.concat(secondArray);
//   for (let i = 0; i < maxLength; i++) {
//     if (arr2.length >= maxLength) {
//       arr.push(arr2[i]);
//     }
//   }
//   return arr;
// }
// console.log(makeArray(["Mango", "Poly"], ["Ajax", "Chelsea"], 3)); // ["Mango", "Poly", "Ajax"]
// console.log(makeArray(["Mango", "Poly", "Houston"], ["Ajax", "Chelsea"], 4)); // ["Mango", "Poly", "Houston", "Ajax"]
// console.log(makeArray(["Mango"], ["Ajax", "Chelsea", "Poly", "Houston"], 3)); // ["Mango", "Ajax", "Chelsea"]
// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus"], 2)); // ["Earth", "Jupiter"]
// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus"], 4)); // ["Earth", "Jupiter", "Neptune", "Uranus"]
// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus", "Venus"], 0)); // []

// **3**

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é filterArray(numbers, value), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª (numbers) —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è (value) —è–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏. –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –ª–∏—à–µ —Ç–∏—Ö —á–∏—Å–µ–ª —ñ–∑ –º–∞—Å–∏–≤—É numbers, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è value.

// –£—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
// –°—Ç–≤–æ—Ä–∏ –ø–æ—Ä–æ–∂–Ω—ñ–π –º–∞—Å–∏–≤, —É —è–∫–∏–π –±—É–¥–µ—à –¥–æ–¥–∞–≤–∞—Ç–∏ –ø—ñ–¥—Ö–æ–¥—è—â—ñ —á–∏—Å–ª–∞.
// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–∏–∫–ª –¥–ª—è —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É numbers.
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —É–º–æ–≤–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä if —É—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ü–∏–∫–ª—É –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∏ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ —Å–≤–æ–≥–æ –º–∞—Å–∏–≤—É.
// –ü–æ–≤–µ—Ä–Ω–∏ —Å–≤—ñ–π –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ –ø—ñ–¥—Ö–æ–¥—è—â–∏–º–∏ —á–∏—Å–ª–∞–º–∏ —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// function filterArray(numbers, value) {
//   const arr = [];
//   for (let i = 0; i < numbers.length; i++) {
//     if (numbers[i] > value) {
//       arr.push(numbers[i]);
//     }
//   }
//   return arr;
// }

// console.log(filterArray([1, 2, 3, 4, 5], 3)); // [4, 5]
// console.log(filterArray([1, 2, 3, 4, 5], 4)); // [5]
// console.log(filterArray([1, 2, 3, 4, 5], 5)); // []
// console.log(filterArray([12, 24, 8, 41, 76], 38)); // [41, 76]
// console.log(filterArray([12, 24, 8, 41, 76], 20)); // [24, 41, 76]

// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é caclculateAverage(),
// —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å
// –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö–Ω—î —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è.
// –î–æ–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —â–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ - —Ü–µ —á–∏—Å–ª–∞.

// function caclculateAverage() {
//   const args = Array.from(arguments);
//   //   console.log(args);
//   let sum = 0;

//   for (let i = 0; i < args.length; i++) {
//     sum += args[i];
//   }
//   return sum / args.length;
// }

// console.log(caclculateAverage(1, 2, 3));
// console.log(caclculateAverage(1, 20, 30, 54));

// functifunction caclculateAverage() {
//   const args = Array.from(arguments);
//   //   console.log(args);
//   let sum = 0;

//   for (let i = 0; i < args.length; i++) {
//     sum += args[i];
//   }
//   return sum / args.length;
// }

// console.log(caclculateAverage(1, 2, 3));
// console.log(caclculateAverage(1, 20, 30, 54));

// ******************
// function countProps(object) {
//   const keys = Object.entries(object);
//   return keys;
// }

// console.log(countProps({ name: "Mango", age: 2 }));
// console.log(countProps({ mail: "poly@mail.com", isOnline: true, score: 500 }));
// console.log(countProps({}));

// –í–∏–∫–ª–∏–∫ `countProps({ name: "Mango", age: 2 })` –ø–æ–≤–µ—Ä—Ç–∞—î `2`
// –§—É–Ω–∫—Ü—ñ—è `countProps` –ø—Ä–∏–π–º–∞—î –Ω–∞—Å—Ç—É–ø–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏: `object`
// –í–∏–∫–ª–∏–∫ `countProps({ mail: "poly@mail.com", isOnline: true, score: 500 })` –ø–æ–≤–µ—Ä—Ç–∞—î `3

// **********  ???????????
// function checkStorage(storage, item) {
//   storage = [];

//   const storageArr = storage.includes(item);
//   if (storageArr === item) {
//     console.log(`${item} is available to order!"`);
//   } else {
//     console.log("Sorry! We are out of stock!");
//   }
// }

// console.log(checkStorage(["apple", "plum", "pear"], "plum"));
// console.log(checkStorage(["apple", "plum", "pear"], "pLuM"));

// *********************************************************

// *************************  HOMEWORKS 4  ******************************

// *******  1   *******

// function isEnoughCapacity(products, containerSize) {
//   products = Object.values(products);
//   total = 0;
//   for (const product of products) {
//     total += product;
//   }
//   if (total <= containerSize) {
//     return true;
//   } else {
//     return false;
//   }
// }

// console.log(isEnoughCapacity({ apples: 2, grapes: 3, carrots: 1 }, 8)); // true

// console.log(isEnoughCapacity({ apples: 4, grapes: 6, lime: 16 }, 12)); // false

// console.log(isEnoughCapacity({ apples: 1, lime: 5, tomatoes: 3 }, 14)); // true

// console.log(isEnoughCapacity({ apples: 18, potatoes: 5, oranges: 2 }, 7)); // false
// ***************************************************************************************

// ***********  2  *************

// function calcAverageCalories(days) {
//   const values = Object.values(days);

//   let calculateTotal = 0;

//   for (const day of days) {
//     // console.log(day.calories);
//     calculateTotal += day.calories / days.length;
//   }
//   return calculateTotal;
// }
// // console.log(calcAverageCalories(calcCalories));

// console.log(
//   calcAverageCalories([
//     { day: "monday", calories: 3010 },
//     { day: "tuesday", calories: 3200 },
//     { day: "wednesday", calories: 3120 },
//     { day: "thursday", calories: 2900 },
//     { day: "friday", calories: 3450 },
//     { day: "saturday", calories: 3280 },
//     { day: "sunday", calories: 3300 },
//   ])
// );
// 3180;

// console.log(
//   calcAverageCalories([
//     { day: "monday", calories: 2040 },
//     { day: "tuesday", calories: 2270 },
//     { day: "wednesday", calories: 2420 },
//     { day: "thursday", calories: 1900 },
//     { day: "friday", calories: 2370 },
//     { day: "saturday", calories: 2280 },
//     { day: "sunday", calories: 2610 },
//   ])
// ); // 2270

// console.log(calcAverageCalories([])); // 0

// // ********  3  **********
// –û–±‚Äô—î–∫—Ç profile –æ–ø–∏—Å—É—î –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞ —ñ–≥—Ä–æ–≤—ñ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ñ.
// –£ –π–æ–≥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è—Ö –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è —ñ–º‚Äô—è –ø—Ä–æ—Ñ—ñ–ª—é username —Ç–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∏—Ö –≥–æ–¥–∏–Ω playTime,
//     –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö —É –≥—Ä—ñ.

// const profile = {
//   username: "Jacob",
//   playTime: 300,
//   changeUsername(newName) {
//     this.username = newName;
//   },
//   updatePlayTime(hours) {
//     this.playTime += hours;
//   },
//   getInfo() {
//     return `${profile.username} has ${profile.playTime} active hours!`;
//   },
// };

// –î–æ–ø–æ–≤–Ω–∏ –æ–±‚Äô—î–∫—Ç profile –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –π–æ–≥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.

// –ú–µ—Ç–æ–¥ changeUsername(newName) –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∏–π–º–∞—Ç–∏ —Ä—è–¥–æ–∫ (–Ω–æ–≤–µ —ñ–º‚Äô—è) –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä newName —Ç–∞ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ username –Ω–∞ –Ω–æ–≤–µ. –ù—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î.
// –ú–µ—Ç–æ–¥ updatePlayTime(hours) –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∏–π–º–∞—Ç–∏ —á–∏—Å–ª–æ (–∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω) —É –ø–∞—Ä–∞–º–µ—Ç—Ä hours —Ç–∞ –∑–±—ñ–ª—å—à–∏—Ç–∏ –Ω–∞ –Ω—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ playTime. –ù—ñ—á–æ–≥–æ –Ω–µ –ø–æ–≤–µ—Ä—Ç–∞—î.
// –ú–µ—Ç–æ–¥ getInfo() –º–∞—î –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Ä—è–¥–æ–∫ —Ñ–æ—Ä–º–∞—Ç—É <Username> has <amount> active hours!, –¥–µ <Username> ‚Äî —Ü–µ —ñ–º‚Äô—è –ø—Ä–æ—Ñ—ñ–ª—é, –∞ <amount> ‚Äî –∫—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–≥—Ä–æ–≤–∏—Ö –≥–æ–¥–∏–Ω.

// console.log(profile.getInfo()); // "Jacob has 300 active hours!"

// profile.changeUsername("Marco");
// console.log(profile.getInfo()); // "Marco has 300 active hours!"

// profile.updatePlayTime(20);
// console.log(profile.getInfo()); // "Marco has 320 active hours!"

// ********************************************************************
