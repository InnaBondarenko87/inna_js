// **************   2   modul

/**
 * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω–Ω—è
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∑–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è
 * –∑–º—ñ–Ω–Ω–æ—ó link —Å–∏–º–≤–æ–ª–æ–º /. –Ø–∫—â–æ –Ω—ñ, –¥–æ–¥–∞–π –¥–æ –∫—ñ–Ω—Ü—è
 * –∑–Ω–∞—á–µ–Ω–Ω—è link —Ü–µ–π —Å–∏–º–≤–æ–ª, –∞–ª–µ —Ç—ñ–ª—å–∫–∏ –≤ —Ç–æ–º—É –≤–∏–ø–∞–¥–∫—É,
 * —è–∫—â–æ –≤ link —î –ø—ñ–¥—Ä—è–¥–æ–∫ "my-site".
 * –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—é if...else –∞–±–æ —Ç–µ—Ä–Ω–∞—Ä–Ω–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä.
 */

// let link = "https://my-site.ua/about";

// if(!link.endsWith("/") && link.includes("my-site")) {
//     link += "/";
// }

// console.log(link);

// -------------------------------------- 4

/**
 * –ù–∞–ø–∏—à–∏ —Ü–∏–∫–ª for, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
 * —á–∏—Å–ª–∞ –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º –≤—ñ–¥ a –¥–æ b,
 * –∞–ª–µ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —á–∏—Å–ª–æ –∫—Ä–∞—Ç–Ω–µ 5.
 */

// const a = 21;
// const b = 100;

// for(let i = a; i < b; i++) {
//     if(!(i % 5)) {
//         console.log(i);
//     }
// }

// for(let i = b; i > a; i--) {
//     if(!(i % 5)) {
//         console.log(i);

//     }
// }

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª,
 * —è–∫—ñ –≤—Ö–æ–¥—è—Ç—å –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω —á–∏—Å–µ–ª —É –∑–º—ñ–Ω–Ω–∏—Ö –≤—ñ–¥ min –¥–æ max.
 * –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ min=0 –∏ max=5, —Ç–æ –¥—ñ–∞–ø–∞–∑–æ–Ω 0-5, —ñ –≤
 * –Ω—å–æ–º—É –¥–≤–∞ –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–ª–∞ - 2 —ñ 4, —ó—Ö —Å—É–º–∞ 6.
 */

// const min = 0;
// const max = 5;
// let total = 0;

// for(let i = min; i <= max; i++) {
//     if(i % 2 === 0) {
//         total += i;
//     }
// }

// console.log(total);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω —É –∫–æ–Ω—Å–æ–ª—ñ –±—Ä–∞—É–∑–µ—Ä–∞ —É –≤–∏–≥–ª—è–¥—ñ
 * —Ä—è–¥–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É "14 –≥. 26 —Ö–≤.". –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó minutes –¥–æ—Ä—ñ–≤–Ω—é—î 0,
 * —Ç–æ –≤–∏–≤–æ–¥—å —Ä—è–¥–æ–∫ "14 –≥.", –±–µ–∑ —Ö–≤–∏–ª–∏–Ω.
 */

// const hours = 14;
// const minutes = 20;
// let time = '';

// if(minutes === 0) {
//     time = `${hours} –≥.`;
// } else {
//     time = `${hours} –≥. ${minutes} —Ö–≤.`;
// }

// const time = minutes > 0 ? `${hours} –≥. ${minutes} —Ö–≤.` : `${hours} –≥.`;
// console.log(time);

// -------------------------------------- 6

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø—ñ –¥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 * - –Ñ —Ç—Ä–∏ —Ç–∏–ø–∞ –ø—ñ–¥–ø–∏—Å–∫–∏: free, pro —ñ vip.
 * - –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø –º–æ–∂—É—Ç—å —Ç—ñ–ª—å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ pro —ñ vip
 */

// const sub = "vip";
// let canConnect;

// if(sub === "pro" || sub === "vip") {
//     canConnect = true;
// } else {
//     canConnect = false;
// }

// let canConnect = sub === "pro" || sub === "vip";

// console.log("Can connect", canConnect);

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—ñ–¥–∫—Ä–∏—Ç–∏ —á–∞—Ç –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.
 * –î–ª—è —Ü—å–æ–≥–æ, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –±—É—Ç–∏:
 * - –¥—Ä—É–≥–æ–º
 * - –æ–Ω–ª–∞–π–Ω
 * - –±–µ–∑ —Ä–µ–∂–∏–º–∞ –Ω–µ —Ç—É—Ä–±—É–≤–∞—Ç–∏
 */

// const isOnline = true;
// const isFriend = true;
// const isDnd = true;

// //                      true && true && false
// const canOpenChat = isOnline && isFriend && !isDnd;
// console.log("–ú–æ–∂–Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–∏ —á–∞—Ç?", canOpenChat);

// ************** 3 modul

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits.
 * –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫
 * —É —Ñ–æ—Ä–º–∞—Ç—ñ –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.
 * –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 */

// const fruits = ["üçé", "üçá", "üçë", "üçå", "üçã"];

// for (let i = 0; i < fruits.length; i++) {
//   console.log(`${i + 1} - ${fruits[i]}`);
// }

/********************************
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø—ñ–¥—Ä–∞—Ö–æ–≤—É—î —Å—É–º—É –≤—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª —É –º–∞—Å–∏–≤—ñ.
 */

// const numbers = [1, 4, 15, 27, 30, 77];
// let total = 0;

// for (const number of numbers) {
//   if (number % 2 === 0) {
//     total += number;
//   }
// }
// console.log(total);

/*********************
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
 * –£ –∑–º—ñ–Ω–Ω–∏—Ö names —Ç–∞ phones –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö –≤–∫–∞–∑—É—é—Ç—å –Ω–∞
 * –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

// const names = "Jacob,William,Solomon,Artemis";
// const phones = "38001234567,38001112233,380055566377,380055566300";

// const namesArr = names.split(",");
// const phonesArr = phones.split(",");

// for (let i = 0; i < namesArr.length; i++) {
//   console.log(`${namesArr[i]} - ${phonesArr[i]}`);
// }

// *********************************
//  * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞
//  * –∫—Ä—ñ–º –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ. –†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è
//  * –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É.
//  * –°–∫—Ä–∏–ø—Ç –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ —Ä—è–¥–∫–∞.
//  */

// const string = "Welcome to the future Viktor ! ???";

// const stringArr = string.split(" ");

// const result = stringArr
//   .slice(1, stringArr.length - 1)
//   .join(" ")
//   .trim();

// console.log(result);

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ—à—É–∫—É –Ω–∞–π–º–µ–Ω—à–æ–≥–æ —á–∏—Å–ª–∞ —É –º–∞—Å–∏–≤—ñ. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏
 * –¥–ª—è –±—É–¥—å-—è–∫–æ–≥–æ –º–∞—Å–∏–≤—É —á–∏—Å–µ–ª. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–æ–∑–≤'—è–∑–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ.
 */

// const values = [2, 17, 94, 1, 23, 37];
// let min;

// for(let i = 0; i < values.length; i++) {
//     if(i === 0) {
//         min = values[i];
//     } else if(values[i] < min) {
//         min = values[i];
//     }
// }

// console.log(min);

// for(let i = 0; i < values.length; i++) {
//     console.log(`i - ${i}`, `value - ${values[i]}`);
// }

// ********** lesson 6 *********
/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
 * —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
 * —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 * –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 *
 * –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
 * —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
 */

// function logItems(items) {
//   for (let i = 0; i < items.length; i++) {
//     console.log(`${i + 1} - ${items[i]}`);
//   }
// }
// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["Inna", "Ari", "Stah", "Viktor"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
 * —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
 * –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
 * –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */

// function printInfo(names, phones) {
//   const namesArr = names.split(",");
//   const phonesArr = phones.split(",");

//   for (let i = 0; i < namesArr.length; i++) {
//     console.log(namesArr[i], phonesArr[i]);
//   }
// }
// printInfo(
//   "Jacob,William,Solomon,Artemis",
//   "89001234567,89001112233,890055566377,890055566300"
// );

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(totalMinutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
 * totalMinutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
 * —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
 */

// function formatTime(totalMinutes) {
//   const hours = Math.floor(totalMinutes / 60);
//   const minutes = totalMinutes % 60;

//   const timeHours = String(hours).padStart(2, 0);
//   const timeMinutes = String(minutes).padStart(2, 0);

//   return `${timeHours} : ${timeMinutes}`;
// }
// console.log(formatTime(77));

// ************   lesson   7

/**
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –¥–ª—è –æ–±'—î–∫—Ç–∞ user, –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ:
 * - –¥–æ–¥–∞—î –ø–æ–ª–µ mood –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 'happy'
 * - –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è hobby –Ω–∞ 'skydiving'
 * - –∑–∞–º—ñ–Ω—é—î –∑–Ω–∞—á–µ–Ω–Ω—è premium –Ω–∞ false
 * - –≤–∏–≤–æ–¥–∏—Ç—å –≤–º—ñ—Å—Ç –æ–±'—î–∫—Ç–∞ user —É —Ñ–æ—Ä–º–∞—Ç—ñ –∫–ª—é—á:–∑–Ω–∞—á–µ–Ω–Ω—è –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ Object.keys() —Ç–∞ for...of
 */

// const user = {
//   name: "Alice",
//   age: 20,
//   hobby: "html",
//   premium: true,
// };

// user.mood = "happy";
// user.hobby = "skydiving";
// user.premium = false;

// const keys = Object.keys(user);

// for (const key of keys) {
//   console.log(`${key}: ${user[key]}`);
// }

// ******  II  ******
// const user = {
//   name: "Alice",
//   age: 20,
//   hobby: "html",
//   premium: true,
// };

// function foo(obj) {
//   obj.mood = "happy";
//   obj.hobby = "skydiving";
//   obj.premium = false;

//   const keys = Object.keys(obj);
//   const arr = [];

//   for (const key of keys) {
//     arr.push(`${key}: ${obj[key]}`);
//   }
//   return arr;
// }
// console.log(foo(user));

/**
 * –£ –Ω–∞—Å —î –æ–±'—î–∫—Ç, –¥–µ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –∑–∞—Ä–ø–ª–∞—Ç–∏ –Ω–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏. –ù–∞–ø–∏—à—ñ—Ç—å –∫–æ–¥ –¥–ª—è
 * –ø—ñ–¥—Å—É–º–æ–≤—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞—Ä–ø–ª–∞—Ç —ñ –∑–±–µ—Ä–µ–∂—ñ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É –∑–º—ñ–Ω–Ω—ñ–π sum.
 * –ü–æ–≤–∏–Ω–Ω–æ –≤–∏–π—Ç–∏ 390. –Ø–∫—â–æ –æ–±'—î–∫—Ç salaries –ø–æ—Ä–æ–∂–Ω—ñ–π, —Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—î –±—É—Ç–∏ 0.
 */

// const salaries = {
//   John: 100,
//   Ann: 160,
//   Pete: 130,
// };

// const values = Object.values(salaries);

// let total = 0;

// for (const value of values) {
//   total += value;
// }
// console.log(total);

// *****  II *****

// function foo(summa) {
//   const values = Object.values(summa);

//   let total = 0;

//   for (const value of values) {
//     total += value;
//   }
//   return total;
// }
// console.log(foo(salaries));

// *******  III  *******

// const keys = Object.keys(salaries);

// let total = 0;

// for (const key of keys) {
//   total += salaries[key];
// }
// console.log(total);

// ************   lesson   8

// const friends = [
//   { name: "Ross", online: false },
//   { name: "Joey", online: true },
//   { name: "Chandler", online: false },
//   { name: "PHOEBE", online: true },
//   { name: "Monika", online: true },
//   { name: "Rachel", online: false },
// ];

// –º–∞—Å–∏–≤ –æ–±—î–∫—Ç—ñ–≤

// function findByname(allFriends, findName) {
//   for (const friend of allFriends) {
//     if (friend.name === findName) {
//       return friend.name;
//     }
//   }
//   return "Not found";
// }
// console.log(findByname(friends, "Monika"));

//********* */ —ñ–º–µ–Ω–∞ –≤—Å—ñ—Ö –¥—Ä—É–∑—ñ–≤  **********

// function getNames(allFriends) {
//   const names = [];

//   for (const item of allFriends) {
//     names.push(item.name);
//   }

//   return names;
// }

// console.log(getNames(friends));
// ********************************************

// ********ONLINE**********

// function getInfo(allFriendsOnline) {
//   let online = [];

//   for (const item of allFriendsOnline) {
//     if (item.online === true) {
//       online.push(item.name);
//     }
//   }

//   return online;
// }

// console.log(getInfo(friends));

// *************************************************************************
//   *************************************************************************
//   *************************************************************************
//   *************************************************************************
//   *************************************************************************
// * –¢–∏–ø—ñ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π –≤—Å—å–æ–≥–æ –¥–≤–∞.
//  * –ú–æ–∂–Ω–∞ –ø–æ–∫–ª–∞—Å—Ç–∏ —á–∏ –∑–Ω—è—Ç–∏ –≥—Ä–æ—à—ñ –∑ —Ä–∞—Ö—É–Ω–∫—É.
//  */
// const Transaction = {
//   DEPOSIT: "deposit",
//   WITHDRAW: "withdraw",
// };

//   /*
//    * –ö–æ–∂–Ω–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏: id, type —Ç–∞ amount
//    */

//   const account = {
//     // –ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É
//     balance: 0,

//     // –Ü—Å—Ç–æ—Ä—ñ—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
//     transactions: [],

//     /*
//      * –ú–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä—é—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//      * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç–∞ —Ç–∏–ø —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//      */
//     createTransaction(amount, type) {
//       const obj = { id: amount, amount, type };
//       return obj;
//     },

//     /*
//      * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å—É–º–∏ –¥–æ –±–∞–ª–∞–Ω—Å—É.
//      * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//      * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
//      * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
//      */
//     deposit(amount) {
//       this.balance += amount;
//       const transaction = this.createTransaction(amount, Transaction.DEPOSIT);
//       this.transactions.push(transaction);
//     },

//     /*
//      * –ú–µ—Ç–æ–¥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –∑–Ω—è—Ç—Ç—è —Å—É–º–∏ –∑ –±–∞–ª–∞–Ω—Å—É.
//      * –ü—Ä–∏–π–º–∞—î —Å—É–º—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.
//      * –í–∏–∫–ª–∏–∫–∞—î createTransaction –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
//      * –ø—ñ—Å–ª—è —á–æ–≥–æ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π.
//      *
//      * –Ø–∫—â–æ amount –±—ñ–ª—å—à–µ –Ω—ñ–∂ –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å, –≤–∏–≤–æ–¥—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
//      * –ø—Ä–æ —Ç–µ, —â–æ –∑–Ω—è—Ç—Ç—è —Ç–∞–∫–æ—ó —Å—É–º–∏ –Ω–µ –º–æ–∂–ª–∏–≤–µ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤.
//      */
//     withdraw(amount) {
//       if(this.balance < amount) {
//         console.log("–Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤");
//         return;
//       }

//       this.balance -= amount;
//       const transaction = this.createTransaction(amount, Transaction.WITHDRAW);
//       this.transactions.push(transaction);
//     },

//     /*
//      * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –ø–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å
//      */
//     getBalance() {
//       return this.balance;
//     },

//     /*
//      * –ú–µ—Ç–æ–¥ —à—É–∫–∞—î —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø–æ id
//      */
//     getTransactionDetails(id) {
//       for(const item of this.transactions) {
//         if(item.id === id) {
//           return item;
//         }
//       }
//       return "Not found";
//     },

//     /*
//      * –ú–µ—Ç–æ–¥ –ø–æ–≤–µ—Ä—Ç–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—à—Ç—ñ–≤
//      * –ø–µ–≤–Ω–æ–≥–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∑ —É—Å—ñ—î—ó —ñ—Å—Ç–æ—Ä—ñ—ó —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
//      */
//     getTransactionTotal(type) {
//       let res = 0;

//       for(const item of this.transactions) {
//         if(item.type === type) {
//           res += item.amount;
//         }
//       }

//       return res;
//     },
// };

// account.deposit(300);
// account.withdraw(100);

// console.log(account);

//   *************************************************************************
//   *************************************************************************
//   *************************************************************************
//   **********************************************
//  lesson 9

/**
 * –í–∏–∫–æ–Ω–∞–π—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach —Ç–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó.
 */
// function printContactsInfo({ names, phones }) {
//   const namesArr = names.split(",");
//   const phonesArr = phones.split(",");
//   for (let i = 0; i < namesArr.length; i += 1) {
//     console.log(`${namesArr[i]}: ${phonesArr[i]}`);
//   }
// }

// const printContactsInfo = (obj) => {
//   const namesArr = obj.names.split(",");
//   const phonesArr = obj.phones.split(",");

//   namesArr.forEach((item, index) => {
//     console.log(`${item}: ${phonesArr[index]}`);
//   });
// };

// printContactsInfo({
//   names: "Jacob,William,Solomon,Artemis",
//   phones: "89001234567,89001112233,890055566377,890055566300",
// });

// ------------------------------------------------ 4

/**
 * Array.prototype.map()
 * - –ü–æ–µ–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤
 * - –ù–µ –∑–º—ñ–Ω—é—î –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤
 * - –ü–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–∞–∫–æ—ó –∂ –¥–æ–≤–∂–∏–Ω–∏
 */

// const allCars = [
//   { make: "Honda", model: "CR-V", amount: 14, price: 24045 },
//   { make: "Honda", model: "Accord", amount: 2, price: 22455 },
//   { make: "Mazda", model: "Mazda 6", amount: 8, price: 24195 },
//   { make: "Mazda", model: "CX-9", amount: 7, price: 31520 },
//   { make: "Toyota", model: "4Runner", amount: 19, price: 34210 },
//   { make: "Toyota", model: "Sequoia", amount: 16, price: 45560 },
//   { make: "Toyota", model: "Tacoma", amount: 4, price: 24320 },
//   { make: "Ford", model: "F-150", amount: 11, price: 27110 },
//   { make: "Ford", model: "Fusion", amount: 13, price: 22120 },
//   { make: "Ford", model: "Explorer", amount: 6, price: 31660 },
// ];

// // model********

// const getModels = (cars) => {
//   const res = [];
//   cars.forEach((item) => {
//     res.push(item.model);
//   });
//   return res;
// };

// console.log(getModels(allCars));

/**
 * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è makeCarsWithDiscount –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ —ñ–∑ –∑–º—ñ–Ω–Ω–∏–º
 * –∑–Ω–∞—á–µ–Ω–Ω—è–º –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ price –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–µ—Ä–µ–¥–∞–Ω–æ—ó –∑–Ω–∏–∂–∫–∏.
 */

// const makeCarsWithDiscount = (cars, discount) => {
//   return cars.map((item) => {
//     return {
//       ...item,
//       price: item.price * (1 - discount),
//     };
//   });
// };

// console.log(makeCarsWithDiscount(allCars, 0.2));

// const makeCarsWithDiscount = (cars, discount) => {
//     return cars.map((item) => {
//         return {
//             ...item,
//             price: item.price * (1 - discount)
//         }
//     })
// }

// console.table(makeCarsWithDiscount(allCars, 0.2));
// console.table(makeCarsWithDiscount(allCars, 0.4));

// const players = [
//   { id: "player-1", name: "Mango", timePlayed: 310, points: 54, online: false },
//   { id: "player-2", name: "Poly", timePlayed: 470, points: 92, online: true },
//   { id: "player-3", name: "Kiwi", timePlayed: 230, points: 48, online: true },
//   { id: "player-4", name: "Ajax", timePlayed: 150, points: 71, online: false },
//   { id: "player-5", name: "Chelsy", timePlayed: 80, points: 48, online: true },
// ];

// const playerIdToUpdate = "player-3";

// const getPlayer = players.map((player) => {
//   if (player.id === playerIdToUpdate) {
//     return {
//       ...player,
//       timePlayed: player.timePlayed + 100,
//     };
//   }

//   return player;
// });

// console.log(getPlayer);

/*
 * –ó–±—ñ–ª—å—à—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω –≥—Ä–∞–≤—Ü—è –∑–∞ id
 */

// const playerIdToUpdate = "player-3";

// const newArr = players.map((player) => {
//     if(player.id === playerIdToUpdate) {
//         return {
//             ...player,
//             timePlayed: player.timePlayed + 100
//         }
//     }
//     return player;
// })

// const update = (players, playerId) => {
//     return players.map((player) => {
//         if(player.id === playerId) {
//             return {
//                 ...player,
//                 timePlayed: player.timePlayed + 100
//             }
//         }
//         return player;
//     })
// }

// console.log(update(players, playerIdToUpdate));

// *****************************************************************

// lesson 12********

//  * –†–∞—Ö—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –≥–æ–¥–∏–Ω
//  */

// const players = [
//   { id: "player-1", name: "Mango", timePlayed: 310, online: false },
//   { id: "player-2", name: "Poly", timePlayed: 470, online: true },
//   { id: "player-3", name: "Kiwi", timePlayed: 230, online: true },
//   { id: "player-4", name: "Ajax", timePlayed: 150, online: false },
//   { id: "player-5", name: "Chelsey", timePlayed: 80, online: true },
// ];

// const result = players.reduce((acc, player) => acc + player.timePlayed, 0);

// console.log(result);

// /**
//  * -------------------------------------
//  */
// const allCars = [
//   {
//     make: "Honda",
//     model: "CR-V",
//     type: "suv",
//     amount: 14,
//     price: 24045,
//     onSale: true,
//   },
//   {
//     make: "Honda",
//     model: "Accord",
//     type: "sedan",
//     amount: 2,
//     price: 22455,
//     onSale: true,
//   },
//   {
//     make: "Mazda",
//     model: "Mazda 6",
//     type: "sedan",
//     amount: 8,
//     price: 24195,
//     onSale: false,
//   },
//   {
//     make: "Mazda",
//     model: "CX-9",
//     type: "suv",
//     amount: 7,
//     price: 31520,
//     onSale: true,
//   },
//   {
//     make: "Toyota",
//     model: "4Runner",
//     type: "suv",
//     amount: 19,
//     price: 34210,
//     onSale: false,
//   },
//   {
//     make: "Toyota",
//     model: "Sequoia",
//     type: "suv",
//     amount: 16,
//     price: 45560,
//     onSale: false,
//   },
//   {
//     make: "Toyota",
//     model: "Tacoma",
//     type: "truck",
//     amount: 4,
//     price: 24320,
//     onSale: true,
//   },
//   {
//     make: "Ford",
//     model: "F-150",
//     type: "truck",
//     amount: 11,
//     price: 27110,
//     onSale: true,
//   },
//   {
//     make: "Ford",
//     model: "Fusion",
//     type: "sedan",
//     amount: 13,
//     price: 22120,
//     onSale: true,
//   },
//   {
//     make: "Ford",
//     model: "Explorer",
//     type: "suv",
//     amount: 6,
//     price: 31660,
//     onSale: false,
//   },
// ];

/**
 * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getModelsOnSale –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤,
 * –∞–ª–µ —Ç—ñ–ª—å–∫–∏ —Ç–∏—Ö, —è–∫—ñ –∑–∞—Ä–∞–∑ –Ω–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—ñ.

// const getModelsOnSale = (cars) => {
//     return cars
//         .filter(car => car.onSale)
//         .map(car => car.model)
// }

// console.log(getModelsOnSale(allCars))

/**
 * –ù–µ—Ö–∞–π —Ñ—É–Ω–∫—Ü—ñ—è getSortedCarsOnSale –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±—ñ–ª—ñ–≤
 * –Ω–∞ —Ä–æ–∑–ø—Ä–æ–¥–∞–∂—ñ (–í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å onSale), –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –∑–∞ –∑—Ä–æ—Å—Ç–∞–Ω–Ω—è–º —Ü—ñ–Ω–∏.
 */

// const getSortedCarsOnSale = (cars) => {
//     return cars
//         .filter(car => car.onSale)
//         .toSorted((a, b) => a.price - b.price)
//         .map(car => {
//             return {
//                 model: car.model,
//                 price: car.price
//             }
//         })
// }

// console.table(getSortedCarsOnSale(allCars))

// ============================================================

// const arr = ["apple,üçé", "banana,üçå", "lemon,üçã"];

// const obj = arr.reduce((acc, item) => {
//   const arrItem = item.split(",");
//   const key = arrItem[0];
//   const value = arrItem[1];

//   acc[key] = value;
//   return acc;
// }, {});

// console.log(obj);

//
// ===============================================================

// courses = ["mahtam", "fizic", "inform", "fizic", "biolog", "mahtam", "astr"];

// const unique = courses.filter(
//   (item, index, arr) => index === arr.indexOf(item)
// );

// console.log(unique);

// ======================================================================

// *********************      lesson 11       *************************************
// const foo = () => {
//   console.log(this);
// };
// foo();
// =====================
// const user = {
//   userName: "Inna",
//   showThis() {
//     console.log("this", this);

//     const foo = () => {
//       console.log("foo", this);
//     };
//     foo();
//   },
//   lalala: () => {
//     console.log("lalala", this);
//   },
// };

// user.showThis();
// user.lalala();
// ________________________________________
// const user2 = {
//   userName: "Viktor",
//   showThis: user.showThis,
// };

// user.showThis();
// user2.showThis();
// =====================

// const user = {
//   userName: "Inna",
//   showThis: () => {
//     console.log("this", this);
//   },
// };
// user.showThis();

// ==========================
// –∫–æ–Ω—Ç–µ–∫—Å—Ç –º–µ—Ç–æ–¥—É –æ–± º—î—Ç–∞, –∞–ª–µ –æ–≥–æ–ª–æ—à–µ–Ω–∞ —è–∫ –∑–æ–≤–Ω—ñ—à–Ω—è —Ñ—É–Ω–∫—Ü—ñ—è
// ==========================

// function showThis() {
//   console.log("this", this);
//   console.log("username", this.userName);
// }

// const user = {
//   userName: "Alice",
// };

// user.showThis = showThis;

// user.showThis();
// *****************************************************************

// ==========================
// –í–ò–ö–õ–ò–ö –ë–ï–ó –ö–û–ù–¢–ï–ö–°–¢–£, –ê–õ–ï –û–ì–û–õ–û–®–ï–ù–ù–Ø –Ø–ö –ú–ï–¢–û–î –û–ë º–Ñ–ö–¢–ê.
// ==========================

// const user = {
//   userName: "Yura",
//   showThis() {
//     console.log(this);
//   },
// };

// const foo = user.showThis;

// console.log(foo);

// foo();
// **************************************************

// ==================================
// –ö–û–ù–¢–ï–ö–°–¢ –£ CALLBACK-–§–£–ù–ö–¶–Ü–Ø–•
// ==================================

// const user = {
//   userName: "petya",
//   showThis() {
//     console.log(this);
//   },
// };

// function foo(callback) {
//   console.log(callback);
//   callback();
// }
// foo(user.showThis);

// =======================================

// const chopShop = {
//   stones: [
//     { name: "diamond", price: 2700, quantity: 4 },
//     { name: "ruby", price: 800, quantity: 2 },
//   ],
//   calcTotalPrice(stoneNama) {
//     const stone = this.stones.find(
//       (item) => item.name.toLowerCase() === stoneNama.toLowerCase().trim()
//     );

//     if (!stone) {
//       return `${stoneNama} not found`;
//     }

//     return stone.price * stone.quantity;
//   },
// };

// console.log(chopShop.calcTotalPrice("    RubY  "));

// ***********************************************************************
// =========================================================================
//
// function showThis(gh, gjh, arr) {
//   console.log(this);
//   console.log(gh, gjh, arr);
// }

// const objA = {
//   a: 5,
//   b: 20,
// };

// const objB = {
//   x: 100,
//   y: 200,
// };

// showThis.call(objA, "ari", true, [2, 5, 6]);

// showThis.apply(objB, ["Petya", 34, [4, 8, 12]]);

// ============================================================================
// *********      call, apply, bind   *****************
// ==============+===========================================================

// function changeColor(color) {
//   console.log("this", this);
//   this.color = color;
// }

// const hat = {
//   color: "red",
// };

// const sweater = {
//   color: "black",
// };

// changeColor.call(hat, "blue");
// console.log(hat);

// changeColor.apply(sweater, ["green"]);
// console.log(sweater);

// --------\
// **************   I—Å–ø  bind()****************

// const changeHatColor = changeColor.bind(hat, "yellow");

// changeHatColor();
// console.log(hat);
// ---------------
//********************   */ II—Å–ø  *********************

// const changeSweaterColor = changeColor.bind(sweater);

// changeSweaterColor("yellow");
// console.log(sweater);

// ===========================================================

// const counter = {
//   value: 0,
//   incremert(value) {
//     console.log("increment", this);
//     this.value += value;
//   },
//   decrement(value) {
//     console.log("decrement", this);
//     this.value -= value;
//   },
// };

// function foo(value, callback) {
//   console.log(callback);
//   callback(value);
// }

// foo(10, counter.incremert.bind(counter));

// foo(2, counter.decrement.bind(counter));

// console.log(counter);

// ===============================================

// const aninal = {
//   legs: 4,
// };

// const dog = Object.create(aninal);

// dog.name = "patron";

// console.log(dog);
// console.log(dog.legs);

// -----------------------------------------
// console.log(dog.hasOwnProperty("name"));
// -----------------------------------------

// for (const key in dog) {
//   if (dog.hasOwnProperty(key)) {
//     console.log(key, dog[key]);
//   }
// }
// -----------------------------------

// const keys = Object.keys(dog);

// console.log(keys);

// -------------------------------------------------------

// const objC = {
//   c: "objC",
// };

// const objB = Object.create(objC);
// objB.b = "objB";

// const objA = Object.create(objB);
// objA.a = "objA";

// console.log(objA.d);
// console.log(objA);
// console.log(objA.hasOwnProperty("c"));
// ================================================

// –ù–∞—à–µ –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –¥–ª—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è, –∞ —Å–∞–º–µ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–±–æ—Ä—É —Ç–∞ –∑–Ω–∏–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ –∫—Ä—É—ó–∑ –∫–æ–Ω—Ç—Ä–æ–ª—é.
// –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç cruiseControl –∑ –º–µ—Ç–æ–¥–∞–º–∏ accelerate —Ç–∞ decrease, –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ speed —Ç–∞ brand.

// const cruiseControl = {
//     speed: 0,
//     brand: "Audi",
//     accelerate() {
//         this.speed += 10;
//         console.log(`–ê–≤—Ç–æ–º–æ–±—ñ–ª—å ${this.brand} –ø—Ä–∏—Å–∫–æ—Ä—é—î—Ç—å—Å—è. –®–≤–∏–¥–∫—ñ—Å—Ç—å ${this.speed}`);
//     },
//     decrease() {
//         if(this.speed <= 0) {
//             console.log("–ê–≤—Ç–æ –∑—É–ø–∏–Ω–∏–ª–æ—Å—å");
//             return;
//         }
//         this.speed -= 10;
//         console.log(`–ê–≤—Ç–æ–º–æ–±—ñ–ª—å ${this.brand} –≥–∞–ª—å–º—É—î. –®–≤–∏–¥–∫—ñ—Å—Ç—å ${this.speed}`);
//     }
// }

// cruiseControl.accelerate();
// cruiseControl.accelerate();
// cruiseControl.decrease();
// cruiseControl.decrease();
// cruiseControl.decrease();

// console.log(cruiseControl);

// *********************************√∑
// ===========================√∑
// const obj1 = {
//   x: 2,
//   y: 4,
// };

// const obj2 = Object.create(obj1);
// console.log(obj1);

// const obj = {};
// // console.log(hasOwnProperty(obj));
// console.log(Object.getPrototypeOf(obj)); // –ü–æ–≤–µ—Ä–Ω–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø –æ–±'—î–∫—Ç–∞
// console.dir(obj, { depth: null }); // –í—ñ–¥–æ–±—Ä–∞–∑–∏—Ç—å –≥–ª–∏–±–æ–∫—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ–±'—î–∫—Ç–∞

// const user = {
//   name: "Anna",
//   showThis() {
//     console.log("this", this);
//   },
// };

// user.showThis;

// console.log(window);
// =========================√∑
// ****************************

// –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —à–≤–∏–¥–∫–æ—Å—Ç—ñ –ø—Ä–æ–∫–∞—Ç–Ω–∏—Ö –∞–≤—Ç–æ.
// –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–∑–≤–æ–ª–µ–Ω—É —à–≤–∏–¥–∫—ñ—Å—Ç—å)
// —Ç–∞ –≤–∏–≤–æ–¥–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —á–∏ –º–∏ —Ä—É—Ö–∞—î–º–æ—Å—å –∑ –±–µ–∑–ø–µ—á–Ω–æ—é —à–≤–∏–¥–∫—ñ—Å—Ç—é —á–∏ –ø–µ—Ä–µ–≤–∏—â—É—î–º–æ, —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –æ–ø—Ä–∞—Ü—å–æ–≤—É–≤–∞—Ç–∏ –æ–±'—î–∫—Ç –∞–≤—Ç–æ–º–æ–±—ñ–ª—è —è–∫ this

// const MAX_SPEED = 60;

// const audi = {
//   brand: "audi",
//   speed: 30,
// };

// const bmw = {
//   brand: "bmw",
//   speed: 70,
// };

// function speedSensor(maxSpeed) {
//   if (this.speed <= maxSpeed) {
//     return `–ê–≤—Ç–æ–º–æ–±—ñ–ª—å ${this.brand} —Ä—É—Ö—Ñ—î—Ç—å—Å—è –∑ –±–µ–∑–ø–µ—á–Ω–æ—é —à–≤–∏–¥–∫—ñ—Å—Ç—é.`;
//   }
//   return `${this.brand} - –ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ —à–≤–∏–¥–∫—ñ—Å—Ç—å!`;

//   return this.speed <= maxSpeed
//     ? `–ê–≤—Ç–æ–º–æ–±—ñ–ª—å ${this.brand} —Ä—É—Ö–∞—î—Ç—å—Å—è –∑ –±–µ–∑–ø–µ—á–Ω–æ—é —à–≤–∏–¥–∫—ñ—Å—Ç—é.`
//     : `${this.brand} - –ü–µ—Ä–µ–≤–∏—â–µ–Ω–æ —à–≤–∏–¥–∫—ñ—Å—Ç—å!`;
// }

// console.log(speedSensor.call(audi, MAX_SPEED));
// console.log(speedSensor.apply(bmw, [MAX_SPEED]));

// ********************  lesson 12    ****************

/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:
 * - email - –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
 * - age - –≤—ñ–∫, —á–∏—Å–ª–æ
 * - numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
 * - topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
 *
 * –ö–ª–∞—Å —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.
 *
 * - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫:
 *    User ${email} is ${age} years old and has ${numPosts} posts.
 *
 * - –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value
 *    –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.
 */

// class Blogger {
//     constructor(obj) {
//         this.email = obj.email;
//         this.age = obj.age;
//         this.numberOfPosts = obj.numberOfPosts;
//         this.topics = obj.topics;
//     }

//     getInfo() {
//         return `User ${this.email} is ${this.age} years old and has ${this.numberOfPosts} posts`;
//     }

//     updatePostCount(value) {
//         this.numberOfPosts += value;
//     }
// }

// const alice = new Blogger({
//     email: "alice@gmail.com",
//     age: 25,
//     numberOfPosts: 30,
//     topics: ["tech", "sport"]
// });
// alice.updatePostCount(10);
// console.log(alice.getInfo());

// console.log(alice);

// ------------------------------------------------- 4

/**
 * –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
 * –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑
 * –≥–µ—Ç–µ—Ä —Ç–∞ —Å–µ—Ç–µ—Ä login —Ç–∞ email.
 */

// class User {
//     #login;
//     #email;

//     constructor(login, email) {
//         this.#login = login;
//         this.#email = email;
//     }

//     get login() {
//         return this.#login;
//     }

//     set login(newLogin) {
//         this.#login = newLogin;
//     }

//     getEmail() {
//         return this.#email;
//     }

//     setEmail(newEmail) {
//         this.#email = newEmail;
//     }
// }

// **********************************

// ==============================================
//    lesson 13
// ===============================================

// const options = [
//   { label: "—á–µ—Ä–≤–æ–Ω–∏–π", color: "#F44336" },
//   { label: "—Å–∏–Ω—ñ–π", color: "#2196F3" },
// ];

// const colorPickerContainerEl = document.querySelector(".color-picker");
// console.log(colorPickerContainerEl);

// const elements = options.map((option) => {
//   const buttonEl = document.createElement("button");
//   buttonEl.classList.add("color-picker__option");
//   buttonEl.textContent = option.label;
//   buttonEl.style.backgroundColor = option.color;

//   return buttonEl;
// });

// colorPickerContainerEl.append(...elements);
